<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fhzc.app.system.mybatis.inter.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.fhzc.app.system.mybatis.model.Product" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="value_day" property="valueDay" jdbcType="INTEGER" />
    <result column="expiry_day" property="expiryDay" jdbcType="INTEGER" />
    <result column="dividend_day" property="dividendDay" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="risk" property="risk" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `pid`, `code`, `name`, `status`, `value_day`, `expiry_day`, `dividend_day`, `ctime`, 
    `sort`, `level`, `risk`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fhzc.app.system.mybatis.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `product`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `product`
    where `pid` = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `product`
    where `pid` = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fhzc.app.system.mybatis.model.ProductExample" >
    delete from `product`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fhzc.app.system.mybatis.model.Product" >
    <selectKey resultType="java.lang.Integer" keyProperty="pid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `product` (`code`, `name`, `status`, 
      `value_day`, `expiry_day`, `dividend_day`, 
      `ctime`, `sort`, `level`, 
      `risk`)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{valueDay,jdbcType=INTEGER}, #{expiryDay,jdbcType=INTEGER}, #{dividendDay,jdbcType=INTEGER}, 
      #{ctime,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{risk,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fhzc.app.system.mybatis.model.Product" >
    <selectKey resultType="java.lang.Integer" keyProperty="pid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `product`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        `code`,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="valueDay != null" >
        `value_day`,
      </if>
      <if test="expiryDay != null" >
        `expiry_day`,
      </if>
      <if test="dividendDay != null" >
        `dividend_day`,
      </if>
      <if test="ctime != null" >
        `ctime`,
      </if>
      <if test="sort != null" >
        `sort`,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="risk != null" >
        `risk`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="valueDay != null" >
        #{valueDay,jdbcType=INTEGER},
      </if>
      <if test="expiryDay != null" >
        #{expiryDay,jdbcType=INTEGER},
      </if>
      <if test="dividendDay != null" >
        #{dividendDay,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="risk != null" >
        #{risk,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fhzc.app.system.mybatis.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from `product`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `product`
    <set >
      <if test="record.pid != null" >
        `pid` = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        `code` = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.valueDay != null" >
        `value_day` = #{record.valueDay,jdbcType=INTEGER},
      </if>
      <if test="record.expiryDay != null" >
        `expiry_day` = #{record.expiryDay,jdbcType=INTEGER},
      </if>
      <if test="record.dividendDay != null" >
        `dividend_day` = #{record.dividendDay,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        `ctime` = #{record.ctime,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        `sort` = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.risk != null" >
        `risk` = #{record.risk,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `product`
    set `pid` = #{record.pid,jdbcType=INTEGER},
      `code` = #{record.code,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=CHAR},
      `value_day` = #{record.valueDay,jdbcType=INTEGER},
      `expiry_day` = #{record.expiryDay,jdbcType=INTEGER},
      `dividend_day` = #{record.dividendDay,jdbcType=INTEGER},
      `ctime` = #{record.ctime,jdbcType=INTEGER},
      `sort` = #{record.sort,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=INTEGER},
      `risk` = #{record.risk,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fhzc.app.system.mybatis.model.Product" >
    update `product`
    <set >
      <if test="code != null" >
        `code` = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="valueDay != null" >
        `value_day` = #{valueDay,jdbcType=INTEGER},
      </if>
      <if test="expiryDay != null" >
        `expiry_day` = #{expiryDay,jdbcType=INTEGER},
      </if>
      <if test="dividendDay != null" >
        `dividend_day` = #{dividendDay,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        `ctime` = #{ctime,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        `sort` = #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="risk != null" >
        `risk` = #{risk,jdbcType=INTEGER},
      </if>
    </set>
    where `pid` = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fhzc.app.system.mybatis.model.Product" >
    update `product`
    set `code` = #{code,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      `value_day` = #{valueDay,jdbcType=INTEGER},
      `expiry_day` = #{expiryDay,jdbcType=INTEGER},
      `dividend_day` = #{dividendDay,jdbcType=INTEGER},
      `ctime` = #{ctime,jdbcType=INTEGER},
      `sort` = #{sort,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER},
      `risk` = #{risk,jdbcType=INTEGER}
    where `pid` = #{pid,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.fhzc.app.system.mybatis.model.ProductExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `product`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>