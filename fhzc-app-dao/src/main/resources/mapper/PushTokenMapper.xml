<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fhzc.app.dao.mybatis.inter.PushTokenMapper" >
  <resultMap id="BaseResultMap" type="com.fhzc.app.dao.mybatis.model.PushToken" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="device_type" property="deviceType" jdbcType="INTEGER" />
    <result column="device_token" property="deviceToken" jdbcType="VARCHAR" />
    <result column="allow_push" property="allowPush" jdbcType="INTEGER" />
    <result column="allow_sound" property="allowSound" jdbcType="INTEGER" />
    <result column="bind_date" property="bindDate" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `id`, `user_id`, `device_type`, `device_token`, `allow_push`, `allow_sound`, `bind_date`, 
    `is_delete`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fhzc.app.dao.mybatis.model.PushTokenExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `push_token`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `push_token`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `push_token`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fhzc.app.dao.mybatis.model.PushTokenExample" >
    delete from `push_token`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fhzc.app.dao.mybatis.model.PushToken" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `push_token` (`user_id`, `device_type`, `device_token`, 
      `allow_push`, `allow_sound`, `bind_date`, 
      `is_delete`)
    values (#{userId,jdbcType=INTEGER}, #{deviceType,jdbcType=INTEGER}, #{deviceToken,jdbcType=VARCHAR}, 
      #{allowPush,jdbcType=INTEGER}, #{allowSound,jdbcType=INTEGER}, #{bindDate,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fhzc.app.dao.mybatis.model.PushToken" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `push_token`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        `user_id`,
      </if>
      <if test="deviceType != null" >
        `device_type`,
      </if>
      <if test="deviceToken != null" >
        `device_token`,
      </if>
      <if test="allowPush != null" >
        `allow_push`,
      </if>
      <if test="allowSound != null" >
        `allow_sound`,
      </if>
      <if test="bindDate != null" >
        `bind_date`,
      </if>
      <if test="isDelete != null" >
        `is_delete`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceToken != null" >
        #{deviceToken,jdbcType=VARCHAR},
      </if>
      <if test="allowPush != null" >
        #{allowPush,jdbcType=INTEGER},
      </if>
      <if test="allowSound != null" >
        #{allowSound,jdbcType=INTEGER},
      </if>
      <if test="bindDate != null" >
        #{bindDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fhzc.app.dao.mybatis.model.PushTokenExample" resultType="java.lang.Integer" >
    select count(*) from `push_token`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `push_token`
    <set >
      <if test="record.id != null" >
        `id` = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        `user_id` = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceType != null" >
        `device_type` = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.deviceToken != null" >
        `device_token` = #{record.deviceToken,jdbcType=VARCHAR},
      </if>
      <if test="record.allowPush != null" >
        `allow_push` = #{record.allowPush,jdbcType=INTEGER},
      </if>
      <if test="record.allowSound != null" >
        `allow_sound` = #{record.allowSound,jdbcType=INTEGER},
      </if>
      <if test="record.bindDate != null" >
        `bind_date` = #{record.bindDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        `is_delete` = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `push_token`
    set `id` = #{record.id,jdbcType=INTEGER},
      `user_id` = #{record.userId,jdbcType=INTEGER},
      `device_type` = #{record.deviceType,jdbcType=INTEGER},
      `device_token` = #{record.deviceToken,jdbcType=VARCHAR},
      `allow_push` = #{record.allowPush,jdbcType=INTEGER},
      `allow_sound` = #{record.allowSound,jdbcType=INTEGER},
      `bind_date` = #{record.bindDate,jdbcType=TIMESTAMP},
      `is_delete` = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fhzc.app.dao.mybatis.model.PushToken" >
    update `push_token`
    <set >
      <if test="userId != null" >
        `user_id` = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null" >
        `device_type` = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceToken != null" >
        `device_token` = #{deviceToken,jdbcType=VARCHAR},
      </if>
      <if test="allowPush != null" >
        `allow_push` = #{allowPush,jdbcType=INTEGER},
      </if>
      <if test="allowSound != null" >
        `allow_sound` = #{allowSound,jdbcType=INTEGER},
      </if>
      <if test="bindDate != null" >
        `bind_date` = #{bindDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        `is_delete` = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fhzc.app.dao.mybatis.model.PushToken" >
    update `push_token`
    set `user_id` = #{userId,jdbcType=INTEGER},
      `device_type` = #{deviceType,jdbcType=INTEGER},
      `device_token` = #{deviceToken,jdbcType=VARCHAR},
      `allow_push` = #{allowPush,jdbcType=INTEGER},
      `allow_sound` = #{allowSound,jdbcType=INTEGER},
      `bind_date` = #{bindDate,jdbcType=TIMESTAMP},
      `is_delete` = #{isDelete,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.fhzc.app.dao.mybatis.model.PushTokenExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `push_token`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>