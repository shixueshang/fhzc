<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fhzc.app.dao.mybatis.inter.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.fhzc.app.dao.mybatis.model.Admin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login" property="login" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="organ" property="organ" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="work_num" property="workNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `id`, `login`, `password`, `realname`, `login_ip`, `last_login_time`, `role`, `status`, 
    `mobile`, `organ`, `area`, `work_num`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fhzc.app.dao.mybatis.model.AdminExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `admin`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `admin`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `admin`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fhzc.app.dao.mybatis.model.AdminExample" >
    delete from `admin`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fhzc.app.dao.mybatis.model.Admin" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `admin` (`login`, `password`, `realname`, 
      `login_ip`, `last_login_time`, `role`, 
      `status`, `mobile`, `organ`, 
      `area`, `work_num`)
    values (#{login,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{role,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{organ,jdbcType=INTEGER}, 
      #{area,jdbcType=VARCHAR}, #{workNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fhzc.app.dao.mybatis.model.Admin" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `admin`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        `login`,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="realname != null" >
        `realname`,
      </if>
      <if test="loginIp != null" >
        `login_ip`,
      </if>
      <if test="lastLoginTime != null" >
        `last_login_time`,
      </if>
      <if test="role != null" >
        `role`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="mobile != null" >
        `mobile`,
      </if>
      <if test="organ != null" >
        `organ`,
      </if>
      <if test="area != null" >
        `area`,
      </if>
      <if test="workNum != null" >
        `work_num`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="organ != null" >
        #{organ,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="workNum != null" >
        #{workNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fhzc.app.dao.mybatis.model.AdminExample" resultType="java.lang.Integer" >
    select count(*) from `admin`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `admin`
    <set >
      <if test="record.id != null" >
        `id` = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.login != null" >
        `login` = #{record.login,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        `realname` = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null" >
        `login_ip` = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null" >
        `last_login_time` = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.role != null" >
        `role` = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        `mobile` = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.organ != null" >
        `organ` = #{record.organ,jdbcType=INTEGER},
      </if>
      <if test="record.area != null" >
        `area` = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.workNum != null" >
        `work_num` = #{record.workNum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `admin`
    set `id` = #{record.id,jdbcType=INTEGER},
      `login` = #{record.login,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      `realname` = #{record.realname,jdbcType=VARCHAR},
      `login_ip` = #{record.loginIp,jdbcType=VARCHAR},
      `last_login_time` = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      `role` = #{record.role,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      `mobile` = #{record.mobile,jdbcType=VARCHAR},
      `organ` = #{record.organ,jdbcType=INTEGER},
      `area` = #{record.area,jdbcType=VARCHAR},
      `work_num` = #{record.workNum,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fhzc.app.dao.mybatis.model.Admin" >
    update `admin`
    <set >
      <if test="login != null" >
        `login` = #{login,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        `realname` = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        `login_ip` = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        `last_login_time` = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        `role` = #{role,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        `mobile` = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="organ != null" >
        `organ` = #{organ,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        `area` = #{area,jdbcType=VARCHAR},
      </if>
      <if test="workNum != null" >
        `work_num` = #{workNum,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fhzc.app.dao.mybatis.model.Admin" >
    update `admin`
    set `login` = #{login,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `realname` = #{realname,jdbcType=VARCHAR},
      `login_ip` = #{loginIp,jdbcType=VARCHAR},
      `last_login_time` = #{lastLoginTime,jdbcType=TIMESTAMP},
      `role` = #{role,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `mobile` = #{mobile,jdbcType=VARCHAR},
      `organ` = #{organ,jdbcType=INTEGER},
      `area` = #{area,jdbcType=VARCHAR},
      `work_num` = #{workNum,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.fhzc.app.dao.mybatis.model.AdminExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `admin`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>